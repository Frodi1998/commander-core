/**
 * –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É–¥–∞–ª–∏—Ç–µ –≤—Å–µ //@ts-ignore
 */
//@ts-ignore
import { VK, getRandomId, MessageContext } from 'vk-io';
//@ts-ignore
import { Handler, IContext, IParams } from 'commander-core';
import { resolve } from 'path';
import Utils from './utils';

interface AdapterUtils extends Utils, IParams {}; //–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É—Ç–∏–ª–∏—Ç
interface AdapterContext extends MessageContext, IContext {}; //–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

const vk = new VK({
    token: '' // —Ç–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã
})

const handler = new Handler<Utils>({
    commandsDirectory: resolve() + '/commands', //–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
    params: new Utils() 
}) //—Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞

handler.listener.on('command_error', async(context: AdapterContext, bot: AdapterUtils, error: Error) =>{
	context.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞`);

	if(bot.developerIds) {
		vk.api.messages.send({
			user_ids: bot.developerIds,
			random_id: getRandomId(), 
			message: `–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ ${bot.command.name}: 
				${context.senderId} => ${context.command}
				${error.stack}`
		}) 
	}
}) // —Å–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ –≤ –∫–æ–º–∞–Ω–¥–∞—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –≤ –ª—Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É

handler.listener.on('command_not_found', async(context: AdapterContext) =>{
	if(!context.isChat) {
		context.send(
			`‚ùó –í–≤–µ–¥–µ–Ω–Ω–æ–π –≤–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!
			üéí –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ "–ü–æ–º–æ—â—å"`
		)
	} 
});

vk.updates.on('message_new', async(context) => {
    if(context.isGroup) return; //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ—Ç–∞

    if(context.text) context.text = context.text.replace(/^\[club(\d+)\|(.*)\]/i, '').trim(); //—É–¥–∞–ª—è–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ

	await handler.execute(context); //–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
});

vk.updates.start().then(() => console.log('start'));